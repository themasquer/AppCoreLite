// <auto-generated />
using System;
using DataAccessDemo.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccessDemo.Migrations.UnitDbMigrations
{
    [DbContext(typeof(UnitDb))]
    [Migration("20231025164103_v2")]
    partial class v2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AppCoreLite.Entities.TreeNode", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("AbbreviationEnglish")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AbbreviationTurkish")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Guid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("NameEnglish")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameTurkish")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("TextEnglish")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TextTurkish")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TreeNodeDetailId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TreeNodeDetailId");

                    b.ToTable("TreeNodes");
                });

            modelBuilder.Entity("AppCoreLite.Entities.TreeNodeDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Guid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("TextEnglish")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TextTurkish")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TreeNodeDetails");
                });

            modelBuilder.Entity("AppCoreLite.Entities.TreeNode", b =>
                {
                    b.HasOne("AppCoreLite.Entities.TreeNodeDetail", "TreeNodeDetail")
                        .WithMany("TreeNodes")
                        .HasForeignKey("TreeNodeDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TreeNodeDetail");
                });

            modelBuilder.Entity("AppCoreLite.Entities.TreeNodeDetail", b =>
                {
                    b.Navigation("TreeNodes");
                });
#pragma warning restore 612, 618
        }
    }
}
